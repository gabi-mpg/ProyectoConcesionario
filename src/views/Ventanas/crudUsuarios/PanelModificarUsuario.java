package views.Ventanas.crudUsuarios;

import controllers.MotoCRUD;
import entidades.Moto;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class PanelModificarUsuario extends JFrame {


        private String ruta = System.getProperty("user.dir")+"\\src\\views\\Imagenes\\";
        /**
         * Creates new form panelModificar
         */
        //Para meter motos, {matricula,marca,gasolina,etc}
        // y as√≠ reutilizar el panel
        public PanelModificarUsuario() {
            initComponents();
            labelTitulo.setText("Modificar moto");
            setSize(350, 500);
            setLocationRelativeTo(null);
            setResizable(false);
            setVisible(true);
        }

        /**
         * This method is called from within the constructor to initialize the form.
         * WARNING: Do NOT modify this code. The content of this method is always
         * regenerated by the Form Editor.
         */
        @SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">
        private void initComponents() {
            GridBagConstraints gridBagConstraints;

            labelTitulo = new JLabel();
            textoTanque = new JTextField();
            textoMatricula = new JTextField();
            textoMarca = new JTextField();
            textoColor = new JTextField();
            labelImagen = new JLabel();
            jLabel1 = new JLabel();
            jLabel2 = new JLabel();
            jLabel3 = new JLabel();
            jLabel4 = new JLabel();
            botonModificar = new JButton();
            checkLimpiar = new JCheckBox();
            matricula = "";
            cnMoto = new MotoCRUD();

            setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            setLayout(new GridBagLayout());

            labelTitulo.setFont(new Font("Dialog", 0, 18)); // NOI18N
            labelTitulo.setText("Modificar una moto");
            gridBagConstraints = new GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.gridwidth = 2;
            gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = GridBagConstraints.NORTHWEST;
            gridBagConstraints.insets = new Insets(8, 60, 8, 50);
            add(labelTitulo, gridBagConstraints);

            textoTanque.setPreferredSize(new Dimension(75, 25));
            gridBagConstraints = new GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
            gridBagConstraints.ipadx = 59;
            gridBagConstraints.anchor = GridBagConstraints.NORTHWEST;
            gridBagConstraints.insets = new Insets(20, 25, 20, 28);
            add(textoTanque, gridBagConstraints);

            /*textoMatricula.setPreferredSize(new java.awt.Dimension(75, 25));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.ipadx = 59;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(20, 25, 20, 28);
            add(textoMatricula, gridBagConstraints);*/

            textoMarca.setPreferredSize(new Dimension(75, 25));
            gridBagConstraints = new GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
            gridBagConstraints.ipadx = 59;
            gridBagConstraints.anchor = GridBagConstraints.NORTHWEST;
            gridBagConstraints.insets = new Insets(20, 25, 20, 28);
            add(textoMarca, gridBagConstraints);

            textoColor.setPreferredSize(new Dimension(75, 25));
            gridBagConstraints = new GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
            gridBagConstraints.ipadx = 59;
            gridBagConstraints.anchor = GridBagConstraints.NORTHWEST;
            gridBagConstraints.insets = new Insets(20, 25, 20, 28);
            add(textoColor, gridBagConstraints);

            labelImagen.setIcon(new ImageIcon(ruta+"iconoModificar.png")); // NOI18N
            gridBagConstraints = new GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.gridwidth = 2;
            gridBagConstraints.insets = new Insets(4, 0, 3, 0);
            add(labelImagen, gridBagConstraints);

            gridBagConstraints = new GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = GridBagConstraints.WEST;
            gridBagConstraints.weighty = 0.5;
            add(jLabel1, gridBagConstraints);

            jLabel2.setText("Marca");
            gridBagConstraints = new GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.anchor = GridBagConstraints.WEST;
            gridBagConstraints.weighty = 0.5;
            add(jLabel2, gridBagConstraints);

            jLabel3.setText("Color");
            gridBagConstraints = new GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.anchor = GridBagConstraints.WEST;
            gridBagConstraints.weighty = 0.5;
            add(jLabel3, gridBagConstraints);

            jLabel4.setText("Tanque");
            gridBagConstraints = new GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.anchor = GridBagConstraints.WEST;
            gridBagConstraints.weighty = 0.5;
            add(jLabel4, gridBagConstraints);

            botonModificar.setText("Modificar");
            botonModificar.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent actionEvent) {
                    modificar(actionEvent);
                }
            });
            gridBagConstraints = new GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.anchor = GridBagConstraints.WEST;
            gridBagConstraints.insets = new Insets(18, 25, 18, 0);
            add(botonModificar, gridBagConstraints);

            checkLimpiar.setText("Limpiar campos");
            checkLimpiar.addActionListener(new ActionListener() {
                public void actionPerformed(ActionEvent evt) {
                    checkLimpiarActionPerformed(evt);
                }
            });
            gridBagConstraints = new GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.gridwidth = 2;
            gridBagConstraints.anchor = GridBagConstraints.EAST;
            gridBagConstraints.insets = new Insets(0, 0, 0, 13);
            add(checkLimpiar, gridBagConstraints);
        }// </editor-fold>

        public void rellenarCampos(){
            if (cnMoto.motoExiste(matricula)){
                Moto moto = cnMoto.buscarMoto(matricula);
                jLabel1.setText("Modificar moto con matricula " + matricula);
                textoColor.setText(moto.getColor());
                textoMarca.setText(moto.getMarca());
                textoTanque.setText(String.valueOf(moto.getTanque()));
            } else {
                JOptionPane.showMessageDialog(this, "La moto no existe en la BD");
                this.dispose();
            }

        }
        private void checkLimpiarActionPerformed(ActionEvent evt) {
            // TODO add your handling code here:
        }

        private void modificar(ActionEvent evt) {
            String marca = textoMarca.getText();
            String color = textoColor.getText();
            int tanque = Integer.parseInt(textoTanque.getText());
            Moto moto = new Moto(matricula, marca, color, tanque);
            cnMoto.updateMoto(moto);
            dispose();
        }

        public void setMatricula(String matricula) {
            this.matricula = matricula;
        }

    // Variables declaration - do not modify
        private JButton botonModificar;
        private JCheckBox checkLimpiar;
        private JLabel jLabel1;
        private JLabel jLabel2;
        private JLabel jLabel3;
        private JLabel jLabel4;
        private JLabel labelImagen;
        private JLabel labelTitulo;
        private JTextField textoColor;
        private JTextField textoMarca;
        private JTextField textoMatricula;
        private JTextField textoTanque;
        private String matricula;
        private MotoCRUD cnMoto;
        // End of variables declaration
    }


